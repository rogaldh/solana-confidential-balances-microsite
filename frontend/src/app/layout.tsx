import "./globals.css";
import { Rubik, Inter } from "next/font/google";
import { ClusterProvider } from "@/components/cluster/cluster-data-access";
import { SolanaProvider } from "@/components/solana/solana-provider";
import { UiLayout } from "@/components/ui/ui-layout";
import { ReactQueryProvider } from "./react-query-provider";
import { Badge } from "@solana/ms-tools-ui";

const interFont = Inter({
  display: "swap",
  preload: true,
  subsets: ["latin"],
  variable: "--font-family-inter",
  weight: ["400"],
});

const rubikFont = Rubik({
  display: "swap",
  preload: true,
  subsets: ["latin"],
  variable: "--default-font-family",
  weight: ["300", "400", "500", "700"],
});

export const metadata = {
  title: "Frontend",
  description: "Generated by create-solana-dapp",
};

const links: { label: string; path: string; blank?: boolean }[] = [
  { label: "Account", path: "/account" },
  { label: "Auditor", path: "/auditor" },
  {
    label: "GitHub",
    path: "https://github.com/solana-developers/confidential_balances_microsite",
    blank: true,
  },
  {
    label: "Docs",
    path: "https://www.solana-program.com/docs/confidential-balances",
    blank: true,
  },
  { label: "Clusters", path: "/clusters" },
];

export default function RootLayout({
  children,
}: {
  children: React.ReactNode;
}) {
  return (
    <html lang="en" className={`${rubikFont.className} ${interFont.variable}`}>
      <body className="dark">
        <ReactQueryProvider>
          <ClusterProvider>
            <SolanaProvider>
              <UiLayout links={links}>{children}</UiLayout>
            </SolanaProvider>
          </ClusterProvider>
        </ReactQueryProvider>
      </body>
    </html>
  );
}
